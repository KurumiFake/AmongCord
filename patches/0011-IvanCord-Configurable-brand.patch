From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <ivan@mrivanplays.com>
Date: Tue, 16 Jun 2020 10:54:03 +0300
Subject: [PATCH] (IvanCord) Configurable brand

Original code from https://github.com/MrIvanPlays/IvanCord/, licensed under MIT

diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index 10c12b8b..5078a1e2 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -287,5 +287,12 @@ public interface ProxyConfig
      * @return should the player kicked be transferred to lobby
      */
     boolean isKickToLobby();
+
+    /**
+     * Returns the brand proxy will send to the client.
+     *
+     * @return brand
+     */
+    String getBrand();
     // IvanCord end
 }
diff --git a/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java b/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java
index 238bc3c1..c3934d73 100644
--- a/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java
+++ b/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java
@@ -11,6 +11,7 @@ public class IvanCordConfiguration extends WaterfallConfiguration
 {
 
     private boolean kickToLobby = true;
+    private String brand = "AmongCord"; // AmongCord
 
     @Override
     public void load()
@@ -19,5 +20,7 @@ public class IvanCordConfiguration extends WaterfallConfiguration
         YamlConfig config = new YamlConfig( new File( "ivancord.yml" ) );
         config.load( false );
         kickToLobby = config.getBoolean( "kick_to_lobby", kickToLobby );
+        brand = config.getString( "brand", brand );
     }
+
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index c0f1896e..8ae01058 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -284,7 +284,7 @@ public class ServerConnector extends PacketHandler
             } else
             {
                 ByteBuf brand = ByteBufAllocator.DEFAULT.heapBuffer();
-                DefinedPacket.writeString( bungee.getName() + " (" + bungee.getVersion() + ")", brand );
+                DefinedPacket.writeString( bungee.getConfig().getBrand(), brand ); // IvanCord - configurable brand
                 user.unsafe().sendPacket( new PluginMessage( user.getPendingConnection().getVersion() >= ProtocolConstants.MINECRAFT_1_13 ? "minecraft:brand" : "MC|Brand", brand, handshakeHandler.isServerForge() ) );
                 brand.release();
             }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 31ac791d..c22267cc 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -300,7 +300,7 @@ public class DownstreamBridge extends PacketHandler
             Preconditions.checkState( !serverBrand.contains( bungee.getName() ), "Cannot connect proxy to itself!" );
 
             brand = ByteBufAllocator.DEFAULT.heapBuffer();
-            DefinedPacket.writeString( bungee.getName() + " <- " + serverBrand, brand ); // Waterfall
+            DefinedPacket.writeString(bungee.getConfig().getBrand() + " <- " + serverBrand, brand ); // Waterfall // IvanCord - configurable brand // AmongCord - keep server brand
             pluginMessage.setData( brand );
             brand.release();
             // changes in the packet are ignored so we need to send it manually
