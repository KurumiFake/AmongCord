From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <pekov.ivan@abv.bg>
Date: Sat, 13 Apr 2019 20:32:49 +0300
Subject: [PATCH] (IvanCord) Misc changes


diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index d567f610..761382e7 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -329,6 +329,7 @@ public final class UserConnection implements ProxiedPlayer
                 callback.done( ServerConnectRequest.Result.ALREADY_CONNECTED, null );
             }
 
+            else // IvanCord - fix dumb connection message behaviour
             if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "already_connected" ) ); // Waterfall
             return;
         }
@@ -339,6 +340,7 @@ public final class UserConnection implements ProxiedPlayer
                 callback.done( ServerConnectRequest.Result.ALREADY_CONNECTING, null );
             }
 
+            else // IvanCord - fix dumb connection message behaviour
             if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "already_connecting" ) ); // Waterfall
             return;
         }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index cc0a9e8c..8cc237a6 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -212,7 +212,18 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                         }
 
                         ServerPing legacy = result.getResponse();
-
+                // IvanCord start - handle null legacy.getPlayers()
+                // such behavior is handled by modern pinging, yet it is not for
+                // legacy pinging. This causes A NPE whenever a < 1.7 MC client
+                // pings the proxy ( for whatever reason someone is using such a
+                // version )
+                if ( legacy.getPlayers() == null )
+                {
+                    // see https://github.com/SpigotMC/BungeeCord/issues/3192#issuecomment-966553225
+                    // as the reason why we set max and online to -1
+                    legacy.setPlayers( new ServerPing.Players( -1, -1, null ) );
+                }
+                // IvanCord end
                 // FlameCord - Close and return if legacy == null
                 if (legacy == null) {
                     ch.close();
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
index 65f00283..1eca7fde 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/ChannelWrapper.java
@@ -62,7 +62,7 @@ public class ChannelWrapper
 
     public void write(Object packet)
     {
-        if ( !closed )
+        if ( !closed && ch.isActive() ) // IvanCord
         {
             if ( packet instanceof PacketWrapper )
             {
diff --git a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
index 1d19c7bd..05a23a12 100644
--- a/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
+++ b/proxy/src/main/java/net/md_5/bungee/netty/PipelineUtils.java
@@ -257,6 +257,7 @@ public class PipelineUtils
                 // IP_TOS is not supported (Windows XP / Windows Server 2003)
             }
             ch.config().setOption( ChannelOption.TCP_NODELAY, true );
+            ch.config().setOption( ChannelOption.SO_KEEPALIVE, true ); // IvanCord
             // FlameCord - TCP Fast Open
             ch.config().setOption( ChannelOption.TCP_FASTOPEN, FlameCord.getInstance().getFlameCordConfiguration().getTcpFastOpen() );
             ch.config().setAllocator( PooledByteBufAllocator.DEFAULT );
