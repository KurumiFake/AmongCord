From 1480531fdf5937f389b5bfe65ab1b9508ffae974 Mon Sep 17 00:00:00 2001
From: MrIvanPlays <ivan@mrivanplays.com>
Date: Tue, 16 Jun 2020 10:54:03 +0300
Subject: [PATCH] (IvanCord) Configurable brand

Original code from https://github.com/MrIvanPlays/IvanCord/, licensed under MIT

diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index ae9540ce..d4bdfcb1 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -282,5 +282,12 @@ public interface ProxyConfig
      * @return should the player kicked be transferred to lobby
      */
     boolean isKickToLobby();
+
+    /**
+     * Returns the brand proxy will send to the client.
+     *
+     * @return brand
+     */
+    String getBrand();
     // IvanCord end
 }
diff --git a/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java b/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java
index 238bc3c1..c3934d73 100644
--- a/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java
+++ b/proxy/src/main/java/com/mrivanplays/ivancord/conf/IvanCordConfiguration.java
@@ -11,6 +11,7 @@ public class IvanCordConfiguration extends WaterfallConfiguration
 {
 
     private boolean kickToLobby = true;
+    private String brand = "AmongCord"; // AmongCord
 
     @Override
     public void load()
@@ -19,5 +20,7 @@ public class IvanCordConfiguration extends WaterfallConfiguration
         YamlConfig config = new YamlConfig( new File( "ivancord.yml" ) );
         config.load( false );
         kickToLobby = config.getBoolean( "kick_to_lobby", kickToLobby );
+        brand = config.getString( "brand", brand );
     }
+
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index 1346fae3..559bfd86 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -279,7 +279,7 @@ public class ServerConnector extends PacketHandler
             } else
             {
                 // FlameCord start - 1.7.x support
-                String brandString = bungee.getName() + " (" + bungee.getVersion() + ")";
+                String brandString = bungee.getConfig().getBrand(); // IvanCord - configurable brand // AmongCord
 
                 if ( ProtocolConstants.isBeforeOrEq( user.getPendingConnection().getVersion(), ProtocolConstants.MINECRAFT_1_7_6 ) )
                 {
@@ -287,7 +287,7 @@ public class ServerConnector extends PacketHandler
                 } else
                 {
                     ByteBuf brand = ByteBufAllocator.DEFAULT.heapBuffer();
-                    DefinedPacket.writeString( bungee.getName() + " (" + bungee.getVersion() + ")", brand );
+                    DefinedPacket.writeString( bungee.getConfig().getBrand(), brand ); // IvanCord - configurable brand
                     user.unsafe().sendPacket( new PluginMessage( user.getPendingConnection().getVersion() >= ProtocolConstants.MINECRAFT_1_13 ? "minecraft:brand" : "MC|Brand", brand, handshakeHandler.isServerForge() ) );
                     brand.release();
                 }
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
index 23c6a80b..70a14d72 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/DownstreamBridge.java
@@ -295,7 +295,7 @@ public class DownstreamBridge extends PacketHandler
                     String serverBrand = DefinedPacket.readString(brand);
                     brand.release();
                     brand = ByteBufAllocator.DEFAULT.heapBuffer();
-                    DefinedPacket.writeString(bungee.getName() + " <- " + serverBrand, brand ); // Waterfall
+                    DefinedPacket.writeString(bungee.getConfig().getBrand() + " <- " + serverBrand, brand ); // Waterfall // IvanCord - custom brand
                     pluginMessage.setData(brand);
                     brand.release();
                 } catch (Exception ProtocolHacksSuck)
@@ -305,7 +305,7 @@ public class DownstreamBridge extends PacketHandler
             } else
             {
                 String serverBrand = new String( pluginMessage.getData(), StandardCharsets.UTF_8);
-                pluginMessage.setData( ( bungee.getName() + " <- " + serverBrand ).getBytes(StandardCharsets.UTF_8) ); // FlameCord - 1.7.x support
+                pluginMessage.setData( ( bungee.getConfig().getBrand() + " <- " + serverBrand ).getBytes(StandardCharsets.UTF_8) ); // FlameCord - 1.7.x support // IvanCord - custom brand
             }
             // FlameCord end - 1.7.x support
         }
-- 
2.23.0

