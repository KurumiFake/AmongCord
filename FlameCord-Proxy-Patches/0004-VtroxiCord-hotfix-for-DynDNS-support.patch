From dc800a146b7a2fb3fc72499b063b63a717e3a78d Mon Sep 17 00:00:00 2001
From: Vtroxi <39201813+vtroxi@users.noreply.github.com>
Date: Thu, 20 May 2021 11:34:22 +0200
Subject: [PATCH] (VtroxiCord) hotfix for DynDNS support

Original code by vtroxi, can be found at https://github.com/vtroxi/BungeeCord

diff --git a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
index 469fe0e1..37dd21e8 100644
--- a/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
+++ b/api/src/main/java/net/md_5/bungee/api/ProxyConfig.java
@@ -14,6 +14,8 @@ import net.md_5.bungee.api.config.ServerInfo;
 public interface ProxyConfig
 {
 
+    void updateServerIPs();
+
     /**
      * Time before users are disconnected due to no network activity.
      *
diff --git a/proxy/src/main/java/net/md_5/bungee/UserConnection.java b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
index e8eb555c..8c509143 100644
--- a/proxy/src/main/java/net/md_5/bungee/UserConnection.java
+++ b/proxy/src/main/java/net/md_5/bungee/UserConnection.java
@@ -357,6 +357,8 @@ public final class UserConnection implements ProxiedPlayer
         };
         ChannelFutureListener listener = new ChannelFutureListener()
         {
+            // Called in main thread...
+
             @Override
             @SuppressWarnings("ThrowableResultIgnored")
             public void operationComplete(ChannelFuture future) throws Exception
@@ -371,17 +373,29 @@ public final class UserConnection implements ProxiedPlayer
                     future.channel().close();
                     pendingConnects.remove( target );
 
-                    ServerInfo def = updateAndGetNextServer( target );
-                    if ( request.isRetry() && def != null && ( getServer() == null || def != getServer().getInfo() ) )
-                    {
-                        if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "fallback_lobby" ) ); // Waterfall
-                        connect( def, null, true, ServerConnectEvent.Reason.LOBBY_FALLBACK, request.getConnectTimeout(), request.isSendFeedback() ); // Waterfall
-                    } else if ( dimensionChange )
+                    InetSocketAddress updated = (InetSocketAddress) Util.getAddr( target.getAddress().getHostName() + ":" + target.getAddress().getPort() );
+                    if ( !updated.getAddress().getHostAddress().equals( target.getAddress().getAddress().getHostAddress() ) )
                     {
-                        disconnect( bungee.getTranslation( "fallback_kick", connectionFailMessage( future.cause() ) ) );
+                        ProxyServer.getInstance().getConfig().updateServerIPs();
+                        System.out.println( "Updated server IPs" );
+
+                        connect( ProxyServer.getInstance().getServerInfo( target.getName() ), null, false, ServerConnectEvent.Reason.UNKNOWN );
                     } else
                     {
-                        if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "fallback_kick", connectionFailMessage( future.cause() ) ) );
+                        ServerInfo def = updateAndGetNextServer( target );
+                        if ( request.isRetry() && def != null && ( getServer() == null || def != getServer().getInfo() ) )
+                        {
+                            if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "fallback_lobby" ) ); // Waterfall
+                            connect( def, null, true, ServerConnectEvent.Reason.LOBBY_FALLBACK, request.getConnectTimeout(), request.isSendFeedback() ); // Waterfall
+                        } else if ( dimensionChange )
+                        {
+                            disconnect( bungee.getTranslation( "fallback_kick", future.cause().getClass().getName() ) );
+                        } else
+                        {
+                            if (request.isSendFeedback()) sendMessage( bungee.getTranslation( "fallback_kick", connectionFailMessage( future.cause() ) ) );
+
+                            sendMessage( "Â§cCause: " + future.cause().getMessage() + " | " + future.cause().toString() );
+                        }
                     }
                 }
             }
@@ -392,6 +406,7 @@ public final class UserConnection implements ProxiedPlayer
                 .handler( initializer )
                 .option( ChannelOption.CONNECT_TIMEOUT_MILLIS, request.getConnectTimeout() )
                 .remoteAddress( target.getAddress() );
+
         // Windows is bugged, multi homed users will just have to live with random connecting IPs
         // FlameCord - Use listenerInfo
         final ListenerInfo listenerInfo = getPendingConnection().getListener();
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
index 3b5ce41e..7fec9756 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/Configuration.java
@@ -5,6 +5,7 @@ import com.google.common.collect.ImmutableMap; // Waterfall
 import gnu.trove.map.TMap;
 import java.io.File;
 import java.io.IOException;
+import java.net.InetSocketAddress;
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Map;
@@ -14,6 +15,7 @@ import javax.imageio.ImageIO;
 import lombok.Getter;
 import lombok.Synchronized; // Waterfall
 
+import net.md_5.bungee.Util;
 import net.md_5.bungee.BungeeCord;
 import net.md_5.bungee.api.Favicon;
 import net.md_5.bungee.api.ProxyConfig;
@@ -170,6 +172,21 @@ public abstract class Configuration implements ProxyConfig
         }
     }
 
+
+    public void updateServerIPs()
+    {
+        TMap<String, ServerInfo> newServers = new CaseInsensitiveMap<>();
+
+        for ( ServerInfo info : servers.values() )
+        {
+            InetSocketAddress updated = (InetSocketAddress) Util.getAddr( info.getAddress().getHostName() + ":" + info.getAddress().getPort() );
+            ServerInfo updatedInfo = ProxyServer.getInstance().constructServerInfo( info.getName(), updated, info.getMotd(), info.isRestricted() );
+            newServers.put( info.getName(), updatedInfo );
+        }
+
+        servers = newServers;
+    }
+
     @Override
     @Deprecated
     public String getFavicon()
-- 
2.35.1

